version: '3.7'
services:
  twitter-to-kafka-service:
    image: meliksahselvi/com.melik-twitter-to-kafka-service:0.0.1-SNAPSHOT
    ports:
      - "5005:5005"
    # volumes ile service'ler içindeki log kayıtlarını docker log kayıtları ile eşleştiriyoruz.
    volumes:
      - "./docker-logs:/workspace/twitter-to-kafka-service/logs"
      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
    user: root
    entrypoint: ["check-config-server-started.sh"]
    depends_on:
      - config-server
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    # JAVA OPTS ayarı ile bu bağlantı noktasını uzaktan hata ayıklama için bir bağlantı noktası açacak şekilde ayarlıyoruz.
    # Aynı zamanda min ve max heap boyutlarını belirliyoruz.
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*5005 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MELIK=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "KAFKA-CONFIG_TOPIC-NAME=twitter-topic"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888"
    networks:
      - ${GLOBAL_NETWORK:-services}

  kafka-to-elastic-service:
    image: meliksahselvi/com.melik-kafka-to-elastic-service:0.0.1-SNAPSHOT
    ports:
      - "5006:5006"
    # volumes ile service'ler içindeki log kayıtlarını docker log kayıtları ile eşleştiriyoruz.
    volumes:
      - "./docker-logs:/workspace/kafka-to-service/logs"
      - "./check-kafka-topics-created.sh:/usr/local/bin/check-kafka-topics-created.sh"
    user: root
    entrypoint: [ "check-kafka-topics-created.sh" ]
    depends_on:
      - config-server
      - twitter-to-kafka-service
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
      - elastic-1
      - elastic-2
      - elastic-3
    # JAVA OPTS ayarı ile bu bağlantı noktasını uzaktan hata ayıklama için bir bağlantı noktası açacak şekilde ayarlıyoruz.
    # Aynı zamanda min ve max heap boyutlarını belirliyoruz.
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*5006 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MELIK=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "KAFKA-CONFIG_TOPIC-NAME=twitter-topic"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888"
      - "ELASTIC-CONFIG_INDEX-NAME=twitter-index"
      - "ELASTIC-CONFIG_CONNECTION-URL=http://elastic-1:9200"
      - "ELASTIC-CONFIG_IS-REPOSITORY=false"
    networks:
      - ${GLOBAL_NETWORK:-services}

  config-server:
    image: meliksahselvi/com.melik-config-server
    ports:
      - "5007:5007"
      - "8888:8888"
    volumes:
      - "./docker-logs:/workspace/config-server/logs"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*5006 -Xms128m -Xmx256m"
    networks:
      - ${GLOBAL_NETWORK:-services}

  elastic-query-service:
    image: meliksahselvi/com.melik-twitter-to-kafka-service:0.0.1-SNAPSHOT
    ports:
      - "5008:5008"
      - "8888:8888"
    volumes:
      - "./docker-logs:/workspace/elastic-query-service/logs"
      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
    user: root
    entrypoint: [ "check-config-server-started.sh" ]
    depends_on:
      - config-server
      - kafka-to-elastic-service
      - elastic-1
      - elastic-2
      - elastic-3
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*5008 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MELIK=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "ELASTIC-CONFIG_INDEX-NAME=twitter-index"
      - "ELASTIC-CONFIG_CONNECTION-URL=http://elastic-1:9200"
      - "SERVER_PORT=8183"
      - "SERVER_SERVLET_CONTEXT-PATH=/elastic-query-service"
      - "SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888"
    networks:
      - ${GLOBAL_NETWORK:-services}